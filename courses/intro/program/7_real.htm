<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/xhtml-strict.dtd">
<html> 
	<head>
  	<title>Bores Signal Processing - Programming DSPs: real time</title>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
		<meta name="keywords" content="DSP online teaching signals digital signal processing IIR FIR filters frequency response window functions" />
		<meta name="author" content="Bores Signal Processing" />
		<meta name="description" content="Training in DSP, software architectures and Philips TriMedia architectures" />
		<link href="../../../css/global.css" rel="stylesheet" />
		<script type ="text/javascript">
			<!--Hide script from old browsers
			var page = "online_dsp_program_sec"; // for courses_menu
			var section = "index_online_sec_sec";  //for horizontal menu
			var curr1PageIndex = 1;  //level1 of the menu
			var curr2PageIndex = 7;	//level2 of the menu
			var curr3PageIndex = 5;	//level3 of the menu		
			//end hiding of script -->
		</script>
		<!-- validated -->
	</head>
  <body>
	   <div id="outerWrapper">
		  <div id="innerWrapper">
				<noscript><p class="declaration">This web site uses Javascript. We use Javascript to improve the user's experience and to enable better maintenance of our site.<br /><br />To be able to view this site properly it is necessary to either <span class="emphasis">enable Javascript</span> or click on <span class="emphasis">allow blocked content</span><br /><br />We promise that we <span class="emphasis">do not:</span></p><ul class="middle"><li>give you content you do not want</li><li>collect any information from your computer</li><li>damage data on your computer</li><li>install software on your computer with or without your consent</li><li>allow someone else to  your computer remotely</li></ul></noscript>
			  <img class="right" src="../../../graphics/composite_training_banner.jpg" alt="We offer training classes and eBooks on DSP, and in Media Processing (TriMedia)" title="We offer training classes and eBooks on DSP, and in Media Processing (TriMedia)" height="99" width="300" />
			  <img alt="Company logo" title="Bores Signal Processing logo" src="../../../graphics/logo.gif" height="100" width="150" />
			  <h1>Introduction to DSP - Programming DSPs: real time</h1>
			  <div class="hMenu">
				  <script type="text/javascript" src="../../../scripts/horizontal_menu.js"></script>
			  </div>
			  <table class="main">
				  <tr>
					  <td class="menuCell">
						  <script type="text/javascript" src="../../../scripts/courses_menu.js"></script>
					  </td>
					  <td class="mainCell">
							<p>Both the naive FIR filter program and its more efficient version assume we can access the whole array of past input values repeatedly:</p>
							<img src="gifs/7_rt1.gif" width="512" height="104" title="FIR filter program" alt="FIR filter program" /> 
							<p>But this is not the case in real time. Real time systems face a continuing stream of input data: often, they have to operate on one input sample at a time and generate one output sample for each input sample:</p>
							<img src="gifs/7_rt2.gif" width="256" height="81" title="Real time processing" alt="Real time processing" /> 
							<p>A similar restriction is likely if the filter program is implemented as a subroutine or function call. Only the current input and output are available to the filter so the filter function itself has to maintain some history of the data and update this history with each new input sample. Management of the history takes up some processing time.</p> 
							<p>The filter needs to know the most recent [N] input samples. So the real time filter has to maintain a history array, which is updated with each new input sample by shifting all the history data one location toward 0:</p><img src="gifs/7_hist.gif" width="256" height="131" title="History array" alt="History array" /> 
							<p>The necessary updating of the history array involves simply adding two extra lines to the C program, to implement the array shifting:</p>
							<img src="gifs/7_hist2.gif" width="512" height="324" title="Updating history array" alt="Updating history array" /> 
							<p>The pointer to previous input samples, <span class="code">*x_ptr</span>, is replaced by a pointer to the history array, <span class="code">*hist_ptr</span>.A new pointer, <span class="code">*hist1_ptr</span>, is initialised to point one further down the history array and is used in the shifting of data down the array.</p> 
							<p>The two extra lines of C code represent extra computation: actually, the filter now takes two lines of C code instead of one for the inner loop.</p>
							<p>
								<img class="right" src="../gifs/buttons.jpg" usemap="#map1" width="171" height="18" alt="backward/forward" /> 
		  			    <map name="map1" id="map1">
			 			      <area shape="rect" coords="2,3,42,15" href="index.htm" alt="go back to start of module" /><!--go back to start of module -->
			 			      <area shape="rect" coords="43,2,84,16" href="7_asm.htm" alt="go back to previous page" /><!--go to previous page -->
			 			      <area shape="rect" coords="84,2,127,15" href="7_mops.htm" alt="go to next page" /><!--go to next page -->
			 			      <area shape="rect" coords="126,2,169,16" href="../index.htm" alt="go to next module" /><!-- go to next module -->  
		  			    </map>
					    </p>
				    </td>
			    </tr>
		    </table>	
		  </div>
		  <hr></hr>
		  <div class="footer">
				<script type="text/javascript" src="../../../scripts/address_level4.js"></script>
  		</div>
		</div>		
	</body>
</html>