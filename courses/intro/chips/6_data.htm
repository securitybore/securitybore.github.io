<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/xhtml-strict.dtd">
<html> 
	<head>
  	<title>Bores Signal Processing - Introduction to DSP - data formats</title>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
		<meta name="keywords" content="DSP online teaching signals digital signal processing IIR FIR filters frequency response window functions" />
		<meta name="author" content="Bores Signal Processing" />
		<meta name="description" content="Training in DSP, software architectures and Philips TriMedia architectures" />
		<link href="../../../css/global.css" rel="stylesheet" />
		<script type ="text/javascript">
			<!--Hide script from old browsers
			var page = "online_dsp_chips_sec"; // for courses_menu
			var section = "index_online_sec_sec";  //for horizontal menu
			var curr1PageIndex = 1;  //level1 of the menu
			var curr2PageIndex = 6;	//level2 of the menu
			var curr3PageIndex = 7;	//level3 of the menu		
			//end hiding of script -->
		</script>
		<!-- validated -->
	</head>
  <body>
	   <div id="outerWrapper">
		  <div id="innerWrapper">
				<noscript><p class="declaration">This web site uses Javascript. We use Javascript to improve the user's experience and to enable better maintenance of our site.<br /><br />To be able to view this site properly it is necessary to either <span class="emphasis">enable Javascript</span> or click on <span class="emphasis">allow blocked content</span><br /><br />We promise that we <span class="emphasis">do not:</span></p><ul class="middle"><li>give you content you do not want</li><li>collect any information from your computer</li><li>damage data on your computer</li><li>install software on your computer with or without your consent</li><li>allow someone else to  your computer remotely</li></ul></noscript>
			  <img class="right" src="../../../graphics/composite_training_banner.jpg" alt="We offer training classes and eBooks on DSP, and in Media Processing (TriMedia)" title="We offer training classes and eBooks on DSP, and in Media Processing (TriMedia)" height="99" width="300" />
			  <img alt="Company logo" title="Bores Signal Processing logo" src="../../../graphics/logo.gif" height="100" width="150" />
			  <h1>Introduction to DSP - DSP processors: data formats</h1>
			  <div class="hMenu">
				  <script type="text/javascript" src="../../../scripts/horizontal_menu.js"></script>
			  </div>
			  <table class="main">
				  <tr>
					  <td class="menuCell">
						  <script type="text/javascript" src="../../../scripts/courses_menu.js"></script>
					  </td>
					  <td class="mainCell">
							<p>DSP processors store data in fixed or floating point formats.</p> 
							<p>It is worth noting that fixed point format is not quite the same as integer: </p>
							<img src="gifs/6_fixed.gif" width="512" height="231" title="Integer and fixed point formats" alt="Integer and fixed point formats" /> 
							<p>The <span class="red">integer</span> format is straightforward: representing whole numbers from 0 up to the largest whole number that can be represented with the available number of bits. <span class="red">Fixed point</span> format is used to represent numbers that lie between 0 and 1: with a 'binary point' assumed to lie just after the most significant bit. The most significant bit in both cases carries the sign of the number.</p> 
							<ul> 
		  					<li> The size of the fraction represented by the smallest bit is the <a href="6_precis.htm">precision</a> of the fixed point format.</li> 
		  					<li>The size of the largest number that can be represented in the available word length is the <a href="6_precis.htm">dynamic range</a> of the fixed point format</li> 
							</ul> 
							<p>To make the best use of the full available word length in the fixed point format, the programmer has to make some decisions:</p> 
							<ul> 
		  					<li>If a fixed point number becomes too large for the available word length, the programmer has to scale the number down, by shifting it to the right: in the process lower bits may drop off the end and be lost</li> 
		  					<li>If a fixed point number is small, the number of bits actually used to represent it is small. The programmer may decide to scale the number up, in order to use more of the available word length</li> 
							</ul> 
							<p>In both cases the programmer has to keep a track of by how much the binary point has been shifted, in order to restore all numbers to the same scale at some later stage.</p> 
							<p><span class="red">Floating point</span> format has the remarkable property of automatically scaling all numbers by moving, and keeping track of, the binary point so that all numbers use the full word length available but never overflow:</p>
							<img src="gifs/6_float.gif" width="512" height="238" title="Floating point format" alt="floating point format" /> 
							<p>Floating point numbers have two parts: the <span class="red">mantissa</span>, which is similar to the fixed point part of the number, and an <span class="red">exponent</span> which is used to keep track of how the binary point is shifted. Every number is scaled by the floating point hardware: </p> 
							<ul> 
		  					<li>If a number becomes too large for the available word length, the hardware automatically scales it down, by shifting it to the right</li>
		  					<li>If a number is small, the hardware automatically scale it up, in order to use the full available word length of the mantissa</li>
							</ul> 
							<p>In both cases the exponent is used to count how many times the number has been shifted.</p> 
							<p>In floating point numbers the binary point comes after the second most significant bit in the mantissa.</p> 
							<p>The <span class="red">block floating point</span> format provides some of the benefits of floating point, but by scaling blocks of numbers rather than each individual number:</p>
							<img src="gifs/6_block.gif" width="512"	height="229" title="Block floating point format" alt="Block floating point format" /> 
							<p>Block floating point numbers are actually represented by the full word length of a fixed point format.</p> 
							<ul> 
		  					<li>If any one of a block of numbers becomes too large for the available word length, the programmer scales down all the numbers in the block, by shifting them to the right</li> 
		  					<li>If the largest of a block of numbers is small, the programmer scales up all numbers in the block, in order to use the full available word length of the mantissa</li> 
							</ul> 
								<p>In both cases the exponent is used to count how many times the numbers in the block have been shifted.</p> 
								<p>Some specialised processors, such as those from Zilog, have special features to support the use of block floating point format: more usually, it is up to the programmer to test each block of numbers and carry out the necessary scaling.</p> 
								<p>The floating point format has one further advantage over fixed point: it is faster. Because of <a href="../iir/5_quant.htm">quantisation error</a>, a basic <a href="../iir/5_form1.htm">direct form 1</a> IIR filter second order section requires an extra multiplier, to scale numbers and avoid overflow. But the floating point hardware automatically scales every number to avoid overflow, so this extra multiplier is not required:</p>
								<img src="gifs/6_data2.gif" width="512" height="172" title="Block diagram" alt="block diagram" /> 
								<p>
									<img class="right" src="../gifs/buttons.jpg" usemap="#map1" width="171" height="18" alt="backward/forward" /> 
		  			    <map name="map1" id="map1">
			 			      <area shape="rect" coords="2,3,42,15" href="index.htm" alt="go back to start of module" /><!--go back to start of module -->
			 			      <area shape="rect" coords="43,2,84,16" href="6_chips.htm" alt="go back to previous page" /><!--go to previous page -->
			 			      <area shape="rect" coords="84,2,127,15" href="6_precis.htm" alt="go to next page" /><!--go to next page -->
			 			      <area shape="rect" coords="126,2,169,16" href="../program/index.htm" alt="go to next module" /><!-- go to next module -->  
		  			    </map>
					    </p>
				    </td>
			    </tr>
		    </table>	
		  </div>
		  <hr></hr>
		  <div class="footer">
				<script type="text/javascript" src="../../../scripts/address_level4.js"></script>
  		</div>
		</div>		
	</body>
</html>