<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/xhtml-strict.dtd">
<html> 
	<head>
  	<title>Bores Signal Processing - Introduction to DSP - precision and dynamic range</title>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
		<meta name="keywords" content="DSP online teaching signals digital signal processing IIR FIR filters frequency response window functions" />
		<meta name="author" content="Bores Signal Processing" />
		<meta name="description" content="Training in DSP, software architectures and Philips TriMedia architectures" />
		<link href="../../../css/global.css" rel="stylesheet" />
		<script type ="text/javascript">
			<!--Hide script from old browsers
			var page = "online_dsp_chips_sec"; // for courses_menu
			var section = "index_online_sec_sec";  //for horizontal menu
			var curr1PageIndex = 1;  //level1 of the menu
			var curr2PageIndex = 6;	//level2 of the menu
			var curr3PageIndex = 8;	//level3 of the menu		
			//end hiding of script -->
		</script>
		<!-- validated -->
	</head>
  <body>
	   <div id="outerWrapper">
		  <div id="innerWrapper">
				<noscript><p class="declaration">This web site uses Javascript. We use Javascript to improve the user's experience and to enable better maintenance of our site.<br /><br />To be able to view this site properly it is necessary to either <span class="emphasis">enable Javascript</span> or click on <span class="emphasis">allow blocked content</span><br /><br />We promise that we <span class="emphasis">do not:</span></p><ul class="middle"><li>give you content you do not want</li><li>collect any information from your computer</li><li>damage data on your computer</li><li>install software on your computer with or without your consent</li><li>allow someone else to  your computer remotely</li></ul></noscript>
			  <img class="right" src="../../../graphics/composite_training_banner.jpg" alt="We offer training classes and eBooks on DSP, and in Media Processing (TriMedia)" title="We offer training classes and eBooks on DSP, and in Media Processing (TriMedia)" height="99" width="300" />
			  <img alt="Company logo" title="Bores Signal Processing logo" src="../../../graphics/logo.gif" height="100" width="150" />
			  <h1>Introduction to DSP - DSP processors: precision and dynamic range</h1>
			  <div class="hMenu">
				  <script type="text/javascript" src="../../../scripts/horizontal_menu.js"></script>
			  </div>
			  <table class="main">
				  <tr>
					  <td class="menuCell">
						  <script type="text/javascript" src="../../../scripts/courses_menu.js"></script>
					  </td>
					  <td class="mainCell"> 
							<p>The <span class="red">precision</span> with which numbers can be represented is determined by the word length in the fixed point format, and by the number of bits in the mantissa in the floating point format.</p> 
							<p>In a 32 bit DSP processor the mantissa is usually 24 bits: so the precision of a floating point DSP is the same as that of a 24 bit fixed point processor. But floating point has one further advantage over fixed point: because the hardware automatically scales each number to use the full word length of the mantissa, the full precision is maintained even for small numbers:</p>
							<img src="gifs/6_precis.gif" width="512" height="235" title="Data formats" alt="data formats" /> 
							<p class="note">There is a potential disadvantage to the way floating point works. Because the hardware automatically scales and normalises every number, the errors due to truncation and rounding depend on the size of the number. If we regard these errors as a source of <a href="../basics/1_quant.htm">quantisation noise</a>, then the noise floor is modulated by the size of the signal. Although the modulation can be shown to be always downwards (that is, a 32 bit floating point format always has noise which is less than that of a 24 bit fixed point format), the signal dependent modulation of the noise may be undesirable: notably, the audio industry prefers to use 24 bit fixed point DSP processors over floating point because it is thought by some that the floating point noise floor modulation is audible.</p> 
							<p>The precision directly affects <a href="../basics/1_quant.htm">quantisation error</a>.</p> 
							<p>The largest number which can be represented determines the <span class="red">dynamic range</span> of the data format. In fixed point format this is straightforward: the dynamic range is the range of numbers that can be represented in the available word length. For floating point format, though, the binary point is moved automatically to accommodate larger numbers: so the dynamic range is determined by the size of the <span class="red">exponent</span>. For an 8 bit exponent, the dynamic range is close to 1,500 dB:</p>
							<img src="gifs/6_range1.gif" width="119" height="50" title="Dynamic range" alt="dynamic range" /> 
							<p>So the dynamic range of a floating point format is enormously larger than for a fixed point format: </p>
							<img src="gifs/6_range2.gif" width="180" height="200" title="Dynamic range of floating point" alt="Dynamic range of floating point" /> 
							<p>While the dynamic range of a 32 bit floating point format is large, it is not infinite: so it is possible to suffer overflow and underflow even with a 32 bit floating point format. A classic example of this can be seen by running fractal (Mandelbrot) calculations on a 32 bit DSP processor: after quite a long time, the fractal pattern ceases to change because the increment size has become too small for a 32 bit floating point format to represent.</p> 
							<p>Most DSP processors have <span class="red">extended precision registers</span> within the processor:</p>
							<img src="gifs/6_extend.gif" width="512" height="292" title="Extended precision registers" alt="Extended precision registers" /> 
							<p>The diagram shows the data path of the Lucent DSP32C processor. Although this is a 32 bit floating point processor, it uses 40 and 45 bit registers internally: so results can be held to a wider dynamic range internally than when written to memory.</p> 
							<p>
								<img class="right" src="../gifs/buttons.jpg" usemap="#map1" width="171" height="18" alt="backward/forward" /> 
		  			    <map name="map1" id="map1">
			 			      <area shape="rect" coords="2,3,42,15" href="index.htm" alt="go back to start of module" /><!--go back to start of module -->
			 			      <area shape="rect" coords="43,2,84,16" href="6_data.htm" alt="go back to previous page" /><!--go to previous page -->
			 			      <area shape="rect" coords="84,2,127,15" href="6_2181.htm" alt="go to next page" /><!--go to next page -->
			 			      <area shape="rect" coords="126,2,169,16" href="../program/index.htm" alt="go to next module" /><!-- go to next module -->  
		  			    </map>
					    </p>
				    </td>
			    </tr>
		    </table>	
		  </div>
		  <hr></hr>
		  <div class="footer">
				<script type="text/javascript" src="../../../scripts/address_level4.js"></script>
  		</div>
		</div>		
	</body>
</html>