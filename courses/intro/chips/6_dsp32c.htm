<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML> 
  <HEAD>
	 <META NAME="KEYWORDS"
	  CONTENT="DSP online teaching quantisation errors quantization analog analogue signals processors Lucent DSP32C Texas TMS320C60 Motorola 56000 ADSP 2181">
	 <META NAME="AUTHOR" CONTENT="Bores Signal Processing"><META NAME="DESCRIPTION"
	 CONTENT="Vendors of DSP hardware, TriMedia based hardware and teaching in both areas">
	 
	 <TITLE>Introduction to DSP - DSP processors:</TITLE>
	 <LINK HREF="../../../css/bores_ws.css" REL="stylesheet"><SCRIPT TYPE="text/javascript" LANGUAGE="JavaScript">
  var heading = "intro_chips";	//variable to identify which page you are on
  var page1 = 0;							//variable to identify where to place arrow in main menu, if that is where you are
  var page2 = 9;	// variable identifies where to place arrow in submenu, if that is where you are
  var level = "<a href = ../../../"; // variable to insert placement of link
		var sub1 = 4; // variable //variable to identify how many menu items above the first submenu
  var sub2 = 1; // variable to identify which address of link2 to insert
  var sub3 = 6; //variable to identify which address of link 3 to insert
  var image = "<IMG SRC=../../../gifs/arrow.gif WIDTH=7 HEIGHT=17 BORDER=0 ALIGN = LEFT>"

	
	
	
	 </SCRIPT> <SCRIPT LANGUAGE="Javascript" TYPE="text/javascript" SRC="../../../scripts/newWindow.js"></SCRIPT>
  </HEAD> 
  <BODY>
	 <IMG SRC="../../../gifs/logo.gif" ALT="BORES logo" ALIGN="MIDDLE" WIDTH="150"
	  HEIGHT="100" BORDER="0" ID="absLogo1"> 
	 <DIV ID="absImage5"><A
		HREF="javascript:newWindow('../../venues/AthensGA.htm', 'venue_htm')"><IMG
		SRC="../../gifs/next_class.jpg"
		ALT="click for details of our next class" WIDTH="284" HEIGHT="89"
		BORDER="0"></A></DIV>
	 <H1 ID="absTitle1">Introduction to DSP</H1> 
	 <H2 ID="absTitle2">DSP processors: Review of DSP Processors</H2> 
	 <DIV ID="absNavigation1"><SCRIPT TYPE="text/javascript" SRC="../../../scripts/site_navigation.js"></SCRIPT></DIV> 
	 <DIV ID="absContent1"> 
		<P>Although there are many DSP processors, they are mostly designed with
		  the same few basic operations in mind: so they share the same set of basic
		  characteristics. We can learn a lot by considering how each processor differs
		  from its competitors, and so gaining an understanding of how to evaluate one
		  processor against others for particular applications.</P> 
		<P>A simple processor design like the Lucent DSP32C shows the basic
		  features of a DSP processor:</P> 
		<UL> 
		  <LI>multiple on-chip memories</LI> 
		  <LI>external memory bus</LI> 
		  <LI>hardware add and multiply in parallel</LI> 
		  <LI>lots of registers</LI> 
		  <LI>serial interface</LI> 
		  <LI>host interface </LI> 
		</UL> 
		<P>The DSP32C is unusual in having a true von Neuman architecture: rather
		  than use multiple buses to allow multiple memory accesses, it handles up to
		  four sequential memory accesses per cycle. The DMA controller handles serial
		  I/O, independently in and out, using cycle stealing which does not disturb the
		  DSP execution thread.</P><IMG SRC="gifs/6_32c.gif" USEMAP="#map3" WIDTH="512"
		HEIGHT="382" BORDER="0"> 
		<P>The simple DSP32C design uses the address registers to hold integer
		  data: and there is no hardware integer multiplier: astonishingly, integers have
		  to be converted to floating point format, then back again, for multiplication.
		  We can excuse this lack of fast integer support by recalling that this was one
		  of the first DSP processors, and it was designed specifically for floating
		  point, not fixed point, operation: the address registers are for address
		  calculations, with integer operations being only a bonus.</P> 
		<P>For a fixed point DSP, the address generation needs to be separated
		  from the integer data registers: this may also be efficient for a floating
		  point DSP if integer calculations are needed very often. Lucent's more modern
		  fixed point DSP16A processor shows the separation of fixed point from address
		  registers: </P><IMG SRC="gifs/6_dsp16.gif" WIDTH="512" HEIGHT="376"> 
		<P>The DSP16A also shows a more conventional use of multiple internal
		  buses (Harvard plus cache) to access two memory operands (plus an instruction)
		  . A further arithmetic unit (shifter) has been added.</P> 
		<P><IMG SRC="../gifs/buttons.jpg" USEMAP="#map1" WIDTH="171" HEIGHT="18"
		  BORDER="0" ALIGN="right"> 
		  <MAP NAME="map1">
<!--go back to previous module -->
			 <AREA SHAPE="RECT" COORDS="2,3,42,15" HREF="../index.htm"
			 ALT="go back to previous module"> 
<!--go back to previous page -->
			 <AREA SHAPE="RECT" COORDS="43,2,84,16" HREF="6_precis.htm"
			 ALT="go back to previous page">
			 <AREA SHAPE="RECT" COORDS="84,2,127,15" HREF="6_2181.htm"
			 ALT="go to next page">
			 <AREA SHAPE="RECT" COORDS="126,2,169,16" HREF="../program/index.htm"
			 ALT="go to next module"> 
		  </MAP> </P><IMG SRC="../gifs/copyrite.jpg" WIDTH="171" HEIGHT="20"
		ALT="Copyrite:Bores Signal Processing" ALIGN="RIGHT" BORDER="0"> 
		<DIV ID="relAddress1"><HR WIDTH="800px" ALIGN="LEFT"><SCRIPT TYPE="text/javascript"
		  SRC="../../../scripts/level4_address.js"></SCRIPT></DIV></DIV> </BODY>
</HTML>
